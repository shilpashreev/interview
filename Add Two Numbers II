/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
   public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
         ListNode dummy = null;
        ListNode cur = dummy;
        Stack<Integer> s1 = new Stack<>();
        Stack<Integer> s2 = new Stack<>();

        while(l1!=null){
            s1.push(l1.val);
            l1= l1.next;
        }

        while(l2!=null){
            s2.push(l2.val);
            l2= l2.next;
        }

        int sum = 0;
        int carry = 0;
        while(!s1.isEmpty() || !s2.isEmpty()){

            sum += carry;

            if(!s1.isEmpty()){
                sum += s1.pop();
            }

            if(!s2.isEmpty()){
                sum += s2.pop();
            }

            carry = sum/10;

            ListNode node = new ListNode(sum%10);
            node.next = dummy;
            dummy = node;

            sum = 0;

        }
        if(carry > 0) {
            ListNode newNode = new ListNode(carry);
            newNode.next = dummy;
            dummy= newNode;

        }
        return dummy;
    }
}
