class Solution {
    public boolean circularArrayLoop(int[] a) {
    if(a.length <=1) return false;

        for(int i = 0; i < a.length; i++){
            int slow = i;
            int fast = i;
            boolean iforward = a[i]>0;

            while (true){
                slow = getIndex(a,slow,iforward);
                if(slow == -1){
                    break;
                }

                fast = getIndex(a,fast,iforward);
                if(fast == -1){
                    break;
                }

                fast = getIndex(a,fast,iforward);
                if(fast == -1){
                    break;
                }

                if(slow == fast) return  true;
            }
        }
        return false;
    }

    private static int getIndex(int[] a, int index, boolean iforward) {
        boolean direction = a[index]>0;

        if(direction != iforward){
            return -1;
        }

        int nextIndex = (a[index]+index)%a.length;

        if(nextIndex < 0){
            nextIndex = nextIndex + a.length;
        }

        if(nextIndex == index){
            return -1;
        }

        return nextIndex;
    }
}
