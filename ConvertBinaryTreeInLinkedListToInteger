/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int getDecimalValue(ListNode head) {
        String s = "";
        
        while(head !=null){
            s = s+head.val;
            head = head.next;
        }
        
       return Integer.parseInt(s,2);
    }
}



2. Second solution

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int getDecimalValue(ListNode head) {

        ListNode temp = head;
        
        int count = 0;
        while(head != null){
            count++;
            head = head.next;
        }
        
        int res = 0;
        
        while(count > 0){
            
            int mid = (int)Math.pow(2,count-1)*temp.val;
            temp = temp.next;
            res = res + mid;
            count --;
        }
        
        return res;
    }
}
