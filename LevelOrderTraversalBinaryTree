package BinaryTree;

import java.util.LinkedList;
import java.util.Queue;

class BinaryTreeInOrderTraversal {


    static class  Node{
        int data;
        Node left;
        Node right;

        Node(int data){
            this.data = data;
        }
    }

    public static void main(String[] args) {
        Node root = new Node(1);
        root.left = new Node(2);
        root.right = new Node(3);
        root.left.left= new Node(4);
        root.left.right = new Node(5);

        levelOrderTraversal(root);
    }

    private static void levelOrderTraversal(Node root) {
        Queue<Node> q = new LinkedList<>();
        q.add(root);

        while (!q.isEmpty()){

            int size = q.size();

            while(size > 0){
                size--;
                Node temp = q.poll();
                System.out.print(temp.data + " ");
                if(temp.left !=null) q.add(temp.left);
                if(temp.right !=null )q.add(temp.right);
            }
            System.out.println("");
        }
        
    }


}
