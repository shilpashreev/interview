/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean hasPathSum(TreeNode root, int sum) {
        if(root == null) return false;
        
        Stack<TreeNode> stack = new Stack<>();
        Stack<Integer> value = new Stack<>();
        
        stack.add(root);
        value.add(sum-root.val);
        while(!stack.isEmpty()){
            TreeNode temp = stack.pop();
            int val = value.pop();
            
            if(temp.left == null && temp.right == null && val == 0) return true;
            
            if(temp.left != null){
               stack.push(temp.left);
               value.push(val - temp.left.val);
            }
            
            if(temp.right != null){
               stack.push(temp.right);
               value.push(val - temp.right.val);
           }
        }
        
        return false;
        
    }
}
