/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> paths = new ArrayList<>();
        
        getPath(root, sum, new ArrayList<Integer>(), paths);
        return paths;
    }
    
    public void getPath(TreeNode root, int sum , List<Integer> cur, List<List<Integer>> paths)
    {
        if(root == null) return;
        
        cur.add(root.val);
        
        if(root.left == null && root.right == null && sum == root.val) {
            paths.add(cur);
            return ;
        }
        
        // if(root.left!=null)
             getPath(root.left, sum - root.val, new ArrayList<Integer>(cur),paths);
        
       
        // if (root.right != null)
            getPath(root.right,sum-root.val, new ArrayList<Integer>(cur), paths);
    }
}
