/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        
        if(head == null){
            return head;
        }
        
        ListNode prev = null;
        ListNode cur = head;
        
        while(m>1){
            m--;
            n--;
            prev = cur;
            cur = cur.next;
        }
        
        ListNode connection = prev;
        ListNode tail = cur;
        
        while(n>0){
            n--;
            ListNode temp = cur.next;
            cur.next = prev;
            prev = cur;
            cur = temp;
        }
        
        if(connection != null){
            connection.next = prev;
        }else{
             head = prev;
        }
        
       tail.next = cur;
        return head;
    }
}
